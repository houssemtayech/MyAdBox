{% extends 'AdBoxBundle::layout.html.twig' %}
{% block extraLinks %}
<link rel="stylesheet" type="text/css" href="{{asset('global/vendor/bootstrap-sweetalert/sweet-alert.min3f0d.css')}}">

    <style>

        #map {
            height: 100%;
        }
        .controls {
            margin-top: 10px;
            border: 1px solid transparent;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            height: 32px;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        }

        #pac-input {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 300px;
        }
        #pac-input:focus {
            border-color: #4d90fe;
        }

        .pac-container {
            font-family: Roboto;
        }

        #type-selector {
            color: #fff;
            background-color: #4d90fe;
            padding: 5px 11px 0;
        }

        #type-selector label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }
        #target {
            width: 345px;
        }

    </style>
    <link rel="stylesheet" href="{{asset('global/vendor/dropify/dropify.min.css')}}">

{% endblock %}
{% block monblock %}

    <div class="page animsition">
        <div class="page-content container-fluid">

            <!-- Panel Full Example -->
            <div class="panel">
                <div class="panel-heading">
                    <h3 class="panel-title">Create Shop
                    </h3>
                </div>
                <div class="panel-body">
                    <form id="shopForm" autocomplete="off" action="http://localhost{{path('shop_new_flush')}}" method="post" enctype="multipart/form-data">
                        <div class="row row-lg">
                            <div class="col-lg-6 form-horizontal">
                                <div class="form-group form-material">
                                    <label class="col-lg-12 col-sm-3 control-label">Shop Name
                                        <span class="required">*</span>
                                    </label>
                                    <div class=" col-lg-12 col-sm-9">
                                        <input type="text" class="form-control" name="Name" placeholder="" required="">
                                    </div>
                                </div>

                                <div class="form-group form-material">
                                    <label class="col-lg-12 col-sm-3 control-label">Country
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-lg-12 col-sm-9">
                                        <input type="text" class="form-control" name="Country" required=""/>
                                    </div>
                                </div>

                                <div class="form-group form-material">
                                    <label class="col-lg-12 col-sm-3 control-label">City
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-lg-12 col-sm-9">
                                        <input type="text" class="form-control" name="City" required=""/>
                                    </div>
                                </div>

                                <div class="form-group form-material">
                                    <label class="col-lg-12 col-sm-3 control-label">Region
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-lg-12 col-sm-9">
                                        <input type="text" class="form-control" name="Region" required=""/>
                                    </div>
                                </div>

                                <div class="form-group form-material">
                                    <label class="col-lg-12 col-sm-3 control-label">Street
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-lg-12 col-sm-9">
                                        <input type="text" class="form-control" name="Street" required=""/>
                                    </div>
                                </div>
                                <div class="form-group form-material">
                                    <label class="col-lg-12 col-sm-3 control-label">Latitude
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-lg-12 col-sm-9">
                                        <input type="text" class="form-control" name="Latitude" required=""/>
                                    </div>
                                </div>
                                <div class="form-group form-material">
                                    <label class="col-lg-12 col-sm-3 control-label">Longitude
                                        <span class="required">*</span>
                                    </label>
                                    <div class="col-lg-12 col-sm-9">
                                        <input type="text" class="form-control" name="Longitude" required=""/>
                                    </div>
                                </div>

                                <div class="form-group form-material">
                                    <label class="col-lg-12 col-sm-3 control-label">Postal Code
                                    </label>
                                    <div class="col-lg-12 col-sm-9">
                                        <input type="text" class="form-control" name="PostalCode" required=""/>
                                    </div>
                                </div>
                                <div class="form-group ">
                                    <label class="col-lg-12 col-sm-3 control-label">logo
                                    </label>
                                    <div class="col-lg-12 col-sm-9">
                                        <input type="file" id="input-file-now" class="dropify" name="Logo" data-allowed-file-extensions="jpeg png"/>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 form-horizontal">
                                <h3 class="panel-title">
                                    <span class="panel-desc">Select or Setup a marker to autofill you form if available
                                    </span>
                                </h3>
                                <input id="pac-input" class="controls" type="text" placeholder="Search Box">
                                <div id="map" style="width:100%;height:500px"></div>
                            </div>
                            <div class="form-group form-material col-lg-12 text-right padding-top-m">
                                <button type="submit" class="btn btn-primary" id="validateButton1">Submit</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <!-- End Panel Full Example -->
        </div>
    </div>
    <script src="{{asset('global/vendor/jquery/jquery.min.js')}}"></script>
    <script src="{{asset('global/vendor/dropify/dropify.min.js')}}"></script>
    <script src="{{asset('global/vendor/jquery-form/jquery.form.min.js')}}"></script>
    <script src="{{asset('global/vendor/bootstrap-sweetalert/sweet-alert.min.js')}}"></script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB9xGQ4SVN2QqBldQfqJhVKxltFgcnYJOk&callback=initAutocomplete&libraries=places" async defer></script>

    <script>
        // This example adds a search box to a map, using the Google Place Autocomplete feature. People can enter geographical searches. The search box will return a pick list containing a mix of places and predicted search terms. This example requires the
        // Places library. Include the libraries=places parameter when you first load the API. For example: <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
        var service;
        var mymarker = null;
        function geocodeLatLng(geocoder, map, infowindow, marker, latlng, name = "") {
            geocoder.geocode({
                'location': latlng
            }, function(results, status) {
                if (status === 'OK') {
                    if (results[0]) {
                        $("input[name='Name']").val("");
                        $("input[name='Street']").val("");
                        $("input[name='Country']").val("");
                        $("input[name='Postal']").val("");
                        $("input[name='Region']").val("");
                        $("input[name='Latitude']").val("");
                        $("input[name='Longitude']").val("");
                        for (i = 0; i < results[0].address_components.length; i++) {
                            if (results[0].address_components[i].types[0] == "route" && $("input[name='Street']").val() == "")
                                $("input[name='Street']").val(results[0].address_components[i].long_name);
                            if (results[0].address_components[i].types[0] == "street_address")
                                $("input[name='Street']").val(results[0].address_components[i].long_name);
                            if (results[0].address_components[i].types[0] == "country")
                                $("input[name='Country']").val(results[0].address_components[i].long_name);
                            if (results[0].address_components[i].types[0] == "postal_code")
                                $("input[name='Postal']").val(results[0].address_components[i].long_name);
                            if (results[0].address_components[i].types[0] == "locality")
                                $("input[name='Region']").val(results[0].address_components[i].long_name);
                            if (results[0].address_components[i].types[0] == "administrative_area_level_1")
                                $("input[name='City']").val(results[0].address_components[i].long_name);
                            }

                        for (i = 0; i < results[0].address_components.length; i++) {
                            if (results[0].address_components[i].types[0] == "administrative_area_level_2")
                                $("input[name='Region']").val(results[0].address_components[i].long_name);

                            }
                        for (i = 0; i < results[0].address_components.length; i++) {
                            if (results[0].address_components[i].types[1] == "sublocality")
                                $("input[name='Region']").val(results[0].address_components[i].long_name);
                            }
                        infowindow.setContent(results[0].formatted_address);
                        infowindow.open(map, marker);
                        $("input[name='Latitude']").val(latlng.lat().toFixed(7));
                        $("input[name='Longitude']").val(latlng.lng().toFixed(7));
                        $("input[name='Name']").val(name);

                    } else {
                        //    window.alert('No results found');
                    }
                } else {
                    //  window.alert('Geocoder failed due to: ' + status);
                }
            });
        }

        function initAutocomplete() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: {
                    lat: -33.8688,
                    lng: 151.2195
                },
                zoom: 13,
                mapTypeId: 'roadmap'
            });
            var geocoder = new google.maps.Geocoder;
            var infowindow = new google.maps.InfoWindow;
             service = new google.maps.places.PlacesService(map);

            // Create the search box and link it to the UI element.
            var input = document.getElementById('pac-input');
            var searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            // Bias the SearchBox results towards current map's viewport.
            map.addListener('bounds_changed', function() {
                searchBox.setBounds(map.getBounds());
            });

            map.addListener('click', function(event) {
                if (mymarker != null) {
                    mymarker.setMap(null);
                    mymarker = null;
                }
                mymarker = new google.maps.Marker({position: event.latLng, map: map});
                geocodeLatLng(geocoder, map, infowindow, mymarker, event.latLng);
            });

            var search_markers = [];
            // Listen for the event fired when the user selects a prediction and retrieve more details for that place.
            searchBox.addListener('places_changed', function() {
                var places = searchBox.getPlaces();

                if (places.length == 0) {
                    return;
                }

                // Clear out the old markers.
                search_markers.forEach(function(marker) {
                    marker.setMap(null);
                });
                search_markers = [];

                // For each place, get the icon, name and location.
                var bounds = new google.maps.LatLngBounds();
                places.forEach(function(place) {
                    if (!place.geometry) {
                        console.log("Returned place contains no geometry");
                        return;
                    }

                    var icon = {
                        url: place.icon,
                        size: new google.maps.Size(71, 71),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(25, 25)
                    };

                    // Create a marker for each place.
                    var mark = new google.maps.Marker({map: map, icon: icon, title: place.name, position: place.geometry.location});
                    mark.addListener("click", function() {
                        geocodeLatLng(geocoder, map, infowindow, mark, place.geometry.location, place.name);

                    });

                    search_markers.push(mark);

                    if (place.geometry.viewport) {
                        // Only geocodes have viewport.
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }
                });
                map.fitBounds(bounds);
            });
        }
    </script>
    <script>
        $(document).ready(function() {
            $('.dropify').dropify();
        var options = {
                        success:       showSuccess , // post-submit callback
                        error:    showError
                        // other available options:
                        //url:       url         // override for form's 'action' attribute
                        //type:      type        // 'get' or 'post', override for form's 'method' attribute
                        //dataType:  null        // 'xml', 'script', or 'json' (expected server response type)
                        //clearForm: true        // clear all form fields after successful submit
                        //resetForm: true        // reset the form after successful submit

                        // $.ajax options can be used here too, for example:
                        //timeout:   3000
                    };

    // bind form using 'ajaxForm'
    $('#shopForm').ajaxForm(options);
    function showSuccess()
    {
      swal("success!", "Congratulation", "success");

    }
    function showError()
    {
      swal("Cancelled", "An error has occured", "error");

    }
        });
    </script>

{% endblock %}
